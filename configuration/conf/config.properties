########################################################
#################### 测试基本配置 ########################
########################################################

################### 被测数据库配置 #######################
# 被测试的数据库，目前的格式为{name}{-version}{-insert mode}(注意-号)其全部参考值参见README文件，注意版本需要匹配
# DB_SWITCH=IoTDB-110-SESSION_BY_TABLET

# 主机列表，如果有多个主机则使用英文逗号进行分割
# HOST=127.0.0.1

# 端口列表，需要和HOST数量一致，保持一一对应。如果有多个端口则使用英文逗号进行分割。
# PORT=6667

# 所有被测数据库的用户名，如果为多个数据库，则要求保持一致
# USERNAME=root

# 所有被测数据库的密码，如果为多个数据库，则要求保持一致
# PASSWORD=root

# 即将被测试写入的数据库的名称
# DB_NAME=test

# 数据库连接认证Token，InfluxDB 2.0使用
# TOKEN=token

############### 数据库初始化：清理数据 ####################
# 测试启动前是否清理数据
# IS_DELETE_DATA=true

# IS_DELETE_DATA = true 时生效，单位为ms，如果清理数据，则需要等待INIT_WAIT_TIME时间待数据库数据清理完成，当数据库为KairosDB, InfluxDb, OpenTSDB, TimescaleDB时必须
# INIT_WAIT_TIME=1000

################## Benchmark配置 #######################
# 总操作次数：具体每种类型操作会按OPERATION_PROPORTION定义的比例划分，例如OPERATION_PROPORTION=1:1:1:1:1:1:1:1:1:1:1
LOOP=1

# 对于数据写入或查询，限制最长耗时，设置为0表示无限制，单位为ms
# 对数据写入，最大误差约为WRITE_OPERATION_TIMEOUT_MS
# 对数据查询，最大误差约为READ_OPERATION_TIMEOUT_MS
# 此参数不限制预先注册元数据的耗时
# TEST_MAX_TIME=0

############## 写入配置：客户端 ##################
# 客户端总数，设备数需要大于客户端数
CLIENT_NUMBER=2

############## 被测系统为IoTDB时扩展参数 ##################
# 是否使用thrift压缩，需要在iotdb的配置文件iotdb-common.properties中设置rpc_thrift_compression_enable=true
# ENABLE_THRIFT_COMPRESSION=false

# Device分配进入存储组的策略，目前支持
# hash  表示Device通过hash的方式分配到存储组中
# mod   表示Device通过对存储组数取模的方式平均分配到存储组中（相邻编号Device分散在不同存储组中）
# div   表示Device通过对存储组数取商的方式分配到存储组中（相邻编号Device集中在相同存储组中）
# SG_STRATEGY=mod

# IoTDB核心线程池数量
# IOTDB_SESSION_POOL_SIZE=50

################### 操作时间配置 #########################
# 时间戳精度，均支持ms，只有IoTDB和InfluxDB支持us
# TIMESTAMP_PRECISION=ms

#################### 数据相关参数 ########################
# 字符串规定长度
# STRING_LENGTH=2

# 浮点数小数位数
# DOUBLE_LENGTH=2

################ IoTDB相关元数据参数 #####################
# 压缩方式 UNCOMPRESSED | SNAPPY | LZ4 (仅对IoTDB有效)
# COMPRESSOR=LZ4

# BOOLEAN: PLAIN/RLE
# ENCODING_BOOLEAN=RLE

# INT32: PLAIN/RLE/TS_2DIFF
# ENCODING_INT32=TS_2DIFF

# INT64: PLAIN/RLE/TS_2DIFF
# ENCODING_INT64=TS_2DIFF

# FLOAT: PLAIN/RLE/TS_2DIFF/GORILLA
# ENCODING_FLOAT=GORILLA

# DOUBLE: PLAIN/RLE/TS_2DIFF/GORILLA
# ENCODING_DOUBLE=GORILLA

# TEXT: PLAIN/DICTIONARY
# ENCODING_TEXT=DICTIONARY

############### 生成数据集：生成数据规律 ###################
# 数据生成随机数种子
# DATA_SEED=666

################## 操作信息：写入参数 ###################
# 每批每个设备写入数据行数，一行是某个设备所有传感器在某一时间戳的数据
# 每个Batch写入数据总点数=DEVICE_NUM_PER_WRITE * SENSOR_NUMBER * BATCH_SIZE_PER_WRITE
# BATCH_SIZE_PER_WRITE=100

# 是否在写入数据前，创建SCHEMA
# CREATE_SCHEMA=true

# 开始写入数据的时间戳
# START_TIME=2022-01-01T00:00:00+08:00

################ Workload：相关参数 ######################
# workload的缓冲区的大小
# WORKLOAD_BUFFER_SIZE=100

########################################################
#################### 输出结果配置 ########################
########################################################
# 结果持久化选择，支持None，IoTDB，MySQL和CSV
# TEST_DATA_PERSISTENCE=None

# 是否将结果划分后输出到多个记录, IoTDB 暂时不支持
# RECORD_SPLIT=true

# 记录行数的上限
# RECORD_SPLIT_MAX_LINE=10000000

############## 输出结果：输出数据库参数 ####################
# 数据库的IP地址
# TEST_DATA_STORE_IP=127.0.0.1

# 数据库的端口号
# TEST_DATA_STORE_PORT=6667

# 数据库的名称
# TEST_DATA_STORE_DB=result

# 数据库用户名
# TEST_DATA_STORE_USER=root

# 数据库用户密码
# TEST_DATA_STORE_PW=root

# 数据库写超时，单位毫秒
# TEST_DATA_WRITE_TIME_OUT=300000

# 数据库写入并发池最多限制
# TEST_DATA_MAX_CONNECTION=1

# 对本次实验的备注，作为表名的一部分存入数据库(如MySQL)中，注意不要有.等特殊字符
# REMARK=

############ 输出结果：MySQL数据库补充参数 #################
# 真实写入到MySQL数据库的比例
# MYSQL_REAL_INSERT_RATE=1.0

################ 输出结果：CSV参数 #######################
# 是否将最终的结果写入到CSV
# CSV_OUTPUT=true

################# 输出结果：日志参数 ######################
# 是否使用静默模式，静默模式会关闭部分日志输出
# IS_QUIET_MODE=true
# 测试过程日志的输出间隔，单位为秒
# LOG_PRINT_INTERVAL=5
